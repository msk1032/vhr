Index: vuevhr/src/views/Login.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div>\r\n    <el-form\r\n      :rules=\"rules\"\r\n      ref=\"loginForm\"\r\n      :model=\"loginForm\"\r\n      class=\"loginContainer\"\r\n    >\r\n      <h3 class=\"loginTitle\">系统登录</h3>\r\n      <el-form-item prop=\"username\">\r\n        <el-input\r\n          size=\"normal\"\r\n          type=\"text\"\r\n          v-model=\"loginForm.username\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"请输入用户名\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          size=\"normal\"\r\n          type=\"password\"\r\n          v-model=\"loginForm.password\"\r\n          auto-complete=\"off\"\r\n          placeholder=\"请输入密码\"\r\n          @keydown.enter.native=\"submitLogin\"\r\n        ></el-input>\r\n      </el-form-item>\r\n\r\n      <el-form-item prop=\"code\">\r\n        <el-input\r\n            size=\"normal\"\r\n            auto-complete=\"off\"\r\n        ></el-input>\r\n     <img :src=\"loginForm.code\" @click=\"getCodeImage\"/>\r\n      </el-form-item>\r\n\r\n      <el-checkbox\r\n        size=\"normal\"\r\n        class=\"loginRemember\"\r\n        v-model=\"checked\"\r\n      ></el-checkbox>\r\n      <el-button\r\n        size=\"normal\"\r\n        type=\"primary\"\r\n        style=\"width: 100%\"\r\n        @click=\"submitLogin\"\r\n        >登录</el-button\r\n      >\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\n//import {postKeyValueRequest} from '@/utils/api'\r\n\r\nexport default {\r\n  name: \"Login\",\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: \"admin\",\r\n        password: \"123\",\r\n        code:''\r\n      },\r\n      checked: true,\r\n      rules: {\r\n        username: [\r\n          { required: true, message: \"请输入用户名\", trigger: \"blur\" },\r\n        ],\r\n        password: [{ required: true, message: \"请输入密码\", trigger: \"blur\" }],\r\n      },\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getCodeImage()\r\n  },\r\n  methods: {\r\n\r\n    getCodeImage(){\r\n      this.getRequest(\"/system/config/kapchaImage?\"+new Date().getMilliseconds()).then(data=>{\r\n        this.loginForm.code = \"data:image/jpeg;base64,\"+data.obj\r\n      })\r\n    },\r\n\r\n    submitLogin() {\r\n        this.$refs.loginForm.validate((valid) => {\r\n          if (valid) {\r\n            //alert('submit!');\r\n            this.postKeyValueRequest('/doLogin', this.loginForm)\r\n            .then(res => {\r\n              if (res){\r\n                //console.log(res)\r\n                window.sessionStorage.setItem('user', JSON.stringify(res.obj))\r\n                let path = this.$route.query.rederict\r\n                this.$router.replace(path == '/' || path == undefined ? '/home' : path)\r\n              }\r\n            })\r\n\r\n          } else {\r\n            this.$message.error('用户名或密码不能为空');\r\n            return false;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.loginContainer {\r\n  border-radius: 15px;\r\n  background-clip: padding-box;\r\n  margin: 180px auto;\r\n  width: 350px;\r\n  padding: 15px 35px 15px 35px;\r\n  background: #fff;\r\n  border: 1px solid #eaeaea;\r\n  box-shadow: 0 0 25px #cac6c6;\r\n}\r\n\r\n.loginTitle {\r\n  margin: 15px auto 20px auto;\r\n  text-align: center;\r\n  color: #505458;\r\n}\r\n\r\n.loginRemember {\r\n  text-align: left;\r\n  margin: 0px 0px 15px 0px;\r\n}\r\n.el-form-item__content {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vuevhr/src/views/Login.vue b/vuevhr/src/views/Login.vue
--- a/vuevhr/src/views/Login.vue	(revision a243e0dbd2a26bc230e454a1f869e5b9ddeab20d)
+++ b/vuevhr/src/views/Login.vue	(date 1677569587405)
@@ -88,7 +88,7 @@
         this.$refs.loginForm.validate((valid) => {
           if (valid) {
             //alert('submit!');
-            this.postKeyValueRequest('/doLogin', this.loginForm)
+            this.postRequest('/doLogin', this.loginForm)
             .then(res => {
               if (res){
                 //console.log(res)
